name: Release Deploy (Lambda)
on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    name: Lint (ruff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Ruff Lint
        run: ruff check .
      - name: Ruff Format (check only)
        run: ruff format --check

  test:
    name: Tests & OpenAPI
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest -q
      - name: Export OpenAPI (openapi.json)
        run: PYTHONPATH=. python tools/export_openapi.py
      - name: Validate OpenAPI (Python validator)
        run: python -m openapi_spec_validator openapi.json

  deploy:
    name: Deploy to Lambda (SAM)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps (for sam build vendoring)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials (Access Keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: SAM Build
        run: sam build --beta-features

      - name: SAM Deploy
        run: |
          sam deploy \
            --stack-name hfv-vereine-api \
            --resolve-s3 \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --region ${{ secrets.AWS_REGION }}

      - name: Print Function URL
        run: |
          aws cloudformation describe-stacks --stack-name hfv-vereine-api \
            --query "Stacks[0].Outputs[?OutputKey=='FunctionUrl'].OutputValue" \
            --output text
